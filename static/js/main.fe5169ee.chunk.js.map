{"version":3,"sources":["TimeComponent/TimeComponent.js","GreetingComponent/GreetingHelpers.js","GreetingComponent/GreetingComponent.js","QuoteComponent/QuoteComponent.js","App.js","reportWebVitals.js","index.js"],"names":["TimeComponent","params","useState","Date","toLocaleTimeString","date","setDate","useEffect","timerId","setInterval","clearInterval","className","getGreeting","currentHour","GreetingComponent","getHours","greeting","setGreeting","QuoteComponent","quote","setQuote","author","setAuthor","fetch","then","response","json","quotes","num","randomNumber","length","Math","floor","random","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kRA2BeA,MAxBf,SAAuBC,GACrB,MAAwBC,oBAAS,IAAIC,MAAOC,sBAA5C,mBAAOC,EAAP,KAAaC,EAAb,KAgBA,OAVAC,qBAAU,WACR,IAAMC,EAAUC,aAAY,WAJ5BH,GAAQ,IAAIH,MAAOC,wBAMhB,KAEH,OAAO,WACLM,cAAcF,MAEf,IAGD,qBAAKG,UAAU,OAAO,cAAY,iBAAlC,SACGN,K,MCjBA,SAASO,EAAYC,GAC1B,OAAIA,EAAc,GAAW,eACzBA,EAAc,GAAW,iBACzBA,EAAc,GAAW,eACtB,aCmBMC,MAxBf,WACE,MAAgCZ,mBAASU,GAAY,IAAIT,MAAOY,aAAhE,mBAAOC,EAAP,KAAiBC,EAAjB,KAgBA,OAVAV,qBAAU,WACR,IAAMC,EAAUC,aAAY,WAJ5BQ,EAAYL,OAMT,KAEH,OAAO,WACLF,cAAcF,MAEf,IAGD,qBAAKG,UAAU,QAAQ,cAAY,qBAAnC,SACGK,K,MCOQE,MA3Bf,WACE,MAA0BhB,mBAAS,IAAnC,mBAAOiB,EAAP,KAAcC,EAAd,KACA,EAA4BlB,mBAAS,IAArC,mBAAOmB,EAAP,KAAeC,EAAf,KAiBA,OAXAf,qBAAU,WACRgB,MAAM,kEACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACL,IARmBC,EAQbC,GARaD,EAQkBD,EAAOG,OAPzCC,KAAKC,MAAMD,KAAKE,SAAWL,IAS9BR,EAASO,EAAOE,GAAcV,OAC9BG,EAAU,KAAD,OAAMK,EAAOE,GAAcR,cAEvC,IAGD,sBAAKV,UAAU,kBAAkB,cAAY,kBAA7C,UACE,qBAAKA,UAAU,QAAf,SAAwBQ,IACxB,qBAAKR,UAAU,SAAf,SAAyBU,Q,MCNhBa,MAdf,WACE,OACE,sBAAK,cAAY,gBAAjB,UACE,iCACE,cAAC,EAAD,IACA,cAAC,EAAD,OAEF,iCACE,cAAC,EAAD,UCDOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.fe5169ee.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\"\nimport \"./TimeComponent.css\"\n\nfunction TimeComponent(params) {\n  const [date, setDate] = useState(new Date().toLocaleTimeString())\n\n  const tick = () => {\n    setDate(new Date().toLocaleTimeString())\n  }\n\n  useEffect(() => {\n    const timerId = setInterval(() => {\n      tick()\n    }, 1000)\n\n    return () => {\n      clearInterval(timerId)\n    }\n  }, [])\n\n  return (\n    <div className=\"time\" data-testid=\"time-container\">\n      {date}\n    </div>\n  )\n}\n\nexport default TimeComponent\n","/**\n * @description Greeting function based on local hour in day\n * @param {string} currentHour\n * @returns {string} greeting\n */\nexport function getGreeting(currentHour) {\n  if (currentHour < 12) return \"Good Morning\"\n  if (currentHour < 17) return \"Good Afternoon\"\n  if (currentHour < 20) return \"Good Evening\"\n  return \"Good Night\"\n}\n","import React, { useEffect, useState } from \"react\"\nimport \"./GreetingComponent.css\"\nimport { getGreeting } from \"./GreetingHelpers\"\n\nfunction GreetingComponent() {\n  const [greeting, setGreeting] = useState(getGreeting(new Date().getHours()))\n\n  const updateGreeting = () => {\n    setGreeting(getGreeting())\n  }\n\n  useEffect(() => {\n    const timerId = setInterval(() => {\n      updateGreeting()\n    }, 20000)\n\n    return () => {\n      clearInterval(timerId)\n    }\n  }, [])\n\n  return (\n    <div className=\"greet\" data-testid=\"greeting-container\">\n      {greeting}\n    </div>\n  )\n}\n\nexport default GreetingComponent\n","import React, { useState, useEffect } from \"react\"\nimport \"./QuoteComponent.css\"\n\nfunction QuoteComponent() {\n  const [quote, setQuote] = useState(\"\")\n  const [author, setAuthor] = useState(\"\")\n\n  const getRandomNumber = (num) => {\n    return Math.floor(Math.random() * num)\n  }\n\n  useEffect(() => {\n    fetch(\"https://cyrus-shahrivar.github.io/simple-json-host/quotes.json\")\n      .then((response) => response.json())\n      .then((quotes) => {\n        const randomNumber = getRandomNumber(quotes.length)\n\n        setQuote(quotes[randomNumber].quote)\n        setAuthor(`- ${quotes[randomNumber].author}`)\n      })\n  }, [])\n\n  return (\n    <div className=\"quote-container\" data-testid=\"quote-container\">\n      <div className=\"quote\">{quote}</div>\n      <div className=\"author\">{author}</div>\n    </div>\n  )\n}\n\nexport default QuoteComponent\n","import TimeComponent from \"./TimeComponent/TimeComponent\"\nimport GreetingComponent from \"./GreetingComponent/GreetingComponent\"\nimport QuoteComponent from \"./QuoteComponent/QuoteComponent\"\nimport \"./App.css\"\n\nfunction App() {\n  return (\n    <div data-testid=\"app-container\">\n      <main>\n        <TimeComponent />\n        <GreetingComponent />\n      </main>\n      <footer>\n        <QuoteComponent />\n      </footer>\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./index.css\"\nimport App from \"./App\"\nimport reportWebVitals from \"./reportWebVitals\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}